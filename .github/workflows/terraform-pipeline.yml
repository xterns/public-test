name: Implement Build Steps in GitHub Actions Workflow for Terraform Plan and apply
on:
    push:
        branches:
            - main
            - feature/*
            
permissions:
  contents: write
env:
    AWS_REGION: eu-west-1
    AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
    Build-Infra:
        name: Terraform CICD
        runs-on: Ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v2

          - name: Set up Terraform
            uses: hashicorp/setup-terraform@v2

        # This Step moves the AWS credentials to the Github Environment So Terraform Can Automatically Identify the Provider is AWS
          - name: Set AWS Credentials
            run: |
                echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
                echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

          - name: Terraform Init
            id: init
            run: terraform init
            working-directory: ./TerraformScripts

        # This Step is only executed if the name of the Branch is either Main or starts with feature
          - name: Terraform Plan
            id: plan
            if: github.ref_name == 'main' || startsWith(github.ref_name, 'feature/')
            run: terraform plan
            working-directory: ./TerraformScripts
            
        # # This Step Requires Approval from owner or maintainer whom has the required Github token to proceed further 
        #   - name: Manual Approval
        #     if: github.event_name == 'push' && github.ref_name == 'feature/TDP-264'
        #     uses: trstringer/manual-approval@v1
        #     with:
        #       approvers: darey-io
        #       secret: ${{ secrets.GITHUB_TOKEN }}
        #       minimum-approvals: 1
        #       issue-title: "Executing Terraform Apply"
        #       issue-body: "Please approve or deny the Terraform Apply"

          - name: Terraform Apply
            id: apply
            if: github.ref_name == 'feature/TDP-264' && (github.event_name == 'push' || steps.approval.outputs.approved == 'true')
            environment:
              name: production
            run: |
                echo "This will execute the Terraform apply. Are you sure you want to proceed (yes/no)"
                read -r -p "Enter your choice: " choice
                if[[ "$choice" =~ ^[Yy]$ ]]; then
                  terraform apply --auto-approve
                else
                echo "Terraform apply cancelled"
                fi
            working-directory: ./TerraformScripts
          

